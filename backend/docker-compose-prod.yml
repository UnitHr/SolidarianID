version: '3.8'

services:
  ##
  ## Message Brokers
  ##
  zookeeper:
    image: confluentinc/cp-zookeeper
    container_name: zookeeper
    ports:
      - '2181:2181'
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - solidarianid-network

  kafka:
    image: confluentinc/cp-kafka
    container_name: kafka
    ports:
      - '9092:9092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - solidarianid-network

  ##
  ## Databases
  ##
  postgres:
    image: postgres:latest
    container_name: postgres
    ports:
      - '5432:5432'
    env_file:
      - ./apps/users-ms/.env.production
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - solidarianid-network

  mongo:
    image: mongo:latest
    container_name: mongo
    ports:
      - '27017:27017'
    env_file:
      - ./apps/communities-ms/.env.production
    volumes:
      - mongo_data:/data/db
    networks:
      - solidarianid-network

  cassandra:
    image: bitnami/cassandra:latest
    container_name: cassandra
    ports:
      - '9042:9042'
    env_file:
      - ./apps/statistics-ms/.env.production
    volumes:
      - './apps/statistics-ms:/docker-entrypoint-initdb.d'
    networks:
      - solidarianid-network

  ##
  ## Microservices
  ##
  api-gateway:
    container_name: api-gateway
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SERVICE_NAME: api-gateway
    env_file:
      - ./apps/api-gateway/.env.production
    ports:
      - '3000:3000'
    networks:
      - solidarianid-network

  users-ms:
    container_name: users-ms
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SERVICE_NAME: users-ms
    env_file:
      - ./apps/users-ms/.env.production
    ports:
      - '3001:3000'
    networks:
      - solidarianid-network
    depends_on:
      - kafka
      - postgres

  communities-ms:
    container_name: communities-ms
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SERVICE_NAME: communities-ms
    env_file:
      - ./apps/communities-ms/.env.production
    ports:
      - '3002:3000'
    networks:
      - solidarianid-network
    depends_on:
      - kafka
      - mongo

  statistics-ms:
    container_name: statistics-ms
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SERVICE_NAME: statistics-ms
    env_file:
      - ./apps/statistics-ms/.env.production
    ports:
      - '3003:3000'
    networks:
      - solidarianid-network
    depends_on:
      - kafka
      - cassandra

volumes:
  postgres_data:
  mongo_data:
  cassandra_data:

networks:
  solidarianid-network:
    driver: bridge
    external: true
